// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders as expected 1`] = `
<IndexOverview
  data={
    Object {
      "holdingsByDate": Array [
        Object {
          "MKR": 0.5,
          "ZRX": 0.5,
          "date": "2020-01-01",
        },
        Object {
          "MKR": 0.5,
          "ZRX": 0.5,
          "date": "2020-01-01",
        },
      ],
      "indexByDate": Array [
        Object {
          "date": "2020-01-01",
          "index": 100,
        },
        Object {
          "date": "2020-01-02",
          "index": 101,
        },
      ],
      "tokens": Array [
        Object {
          "address": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
          "name": "Maker",
          "symbol": "MKR",
        },
        Object {
          "address": "0xe41d2489571d322189246dafa5ebde1f4699f498",
          "name": "0x Protocol Token",
          "symbol": "ZRX",
        },
      ],
    }
  }
>
  <styled.div>
    <div
      className="sc-fznKkj fNAQKS"
    >
      <IndexReturn>
        <styled.div>
          <div
            className="sc-fznyAO jcqQNr"
          >
            <div>
              <h2>
                Track the top trading tokens on Uniswap
              </h2>
              Uniswap10 is an index of the top 10 traded tokens on 
              <a
                href="https://uniswap.io/"
                rel="noopener noreferrer"
                target="_blank"
              >
                Uniswap
              </a>
              .
            </div>
            <div>
              <h2>
                Invest in liquid DeFi assets
              </h2>
              Tokens are ranked by market activity. 
              <Link
                to="/faq"
              >
                <LinkAnchor
                  href="/faq"
                  navigate={[Function]}
                >
                  <a
                    href="/faq"
                    onClick={[Function]}
                  >
                    Learn more
                  </a>
                </LinkAnchor>
              </Link>
              .
            </div>
            <div>
              <h2>
                Customize it!
              </h2>
              Try out the 
              <Link
                to="/settings"
              >
                <LinkAnchor
                  href="/settings"
                  navigate={[Function]}
                >
                  <a
                    href="/settings"
                    onClick={[Function]}
                  >
                    settings
                  </a>
                </LinkAnchor>
              </Link>
              .
            </div>
          </div>
        </styled.div>
      </IndexReturn>
      <CurrentValue
        value={101}
      >
        <styled.div>
          <div
            className="sc-fzplWN dqOOhd"
          >
            <styled.div>
              <div
                className="sc-AxjAm qfvsW"
              >
                <styled.h2>
                  <h2
                    className="sc-AxiKw dxaXnq"
                  >
                    Current Value
                  </h2>
                </styled.h2>
                <p>
                  101
                </p>
              </div>
            </styled.div>
          </div>
        </styled.div>
      </CurrentValue>
      <Change
        change={0.01}
      >
        <styled.div>
          <div
            className="sc-fzpans jDkjZT"
          >
            <styled.div>
              <div
                className="sc-AxjAm qfvsW"
              >
                <styled.h2>
                  <h2
                    className="sc-AxiKw dxaXnq"
                  >
                    24h Change
                  </h2>
                </styled.h2>
                <Percent
                  number={0.01}
                >
                  <styled.span
                    color="#74954F"
                  >
                    <span
                      className="sc-AxirZ gacQIj"
                      color="#74954F"
                    >
                      +
                      1
                      %
                    </span>
                  </styled.span>
                </Percent>
              </div>
            </styled.div>
          </div>
        </styled.div>
      </Change>
      <IndexChart
        indexByDate={
          Array [
            Object {
              "date": "2020-01-01",
              "index": 100,
            },
            Object {
              "date": "2020-01-02",
              "index": 101,
            },
          ]
        }
      >
        <styled.div>
          <div
            className="sc-AxhCb kElOJB"
          >
            <styled.div>
              <div
                className="sc-AxjAm qfvsW"
              >
                <styled.h2>
                  <h2
                    className="sc-AxiKw dxaXnq"
                  >
                    Index
                  </h2>
                </styled.h2>
                <styled.div>
                  <div
                    className="sc-AxhUy kXTwkh"
                  >
                    <span>
                      Total Return:  
                      <Percent
                        number={0.010000000000000009}
                      >
                        <styled.span
                          color="#74954F"
                        >
                          <span
                            className="sc-AxirZ gacQIj"
                            color="#74954F"
                          >
                            +
                            1
                            %
                          </span>
                        </styled.span>
                      </Percent>
                    </span>
                    <span>
                      <Radio
                        checked={true}
                        onChange={[Function]}
                      >
                        <styled.label
                          checked={true}
                        >
                          <label
                            checked={true}
                            className="sc-AxheI kMaIdM"
                          >
                            <styled.input
                              checked={true}
                              onChange={[Function]}
                            >
                              <input
                                checked={true}
                                className="sc-AxgMl fICzoZ"
                                onChange={[Function]}
                                type="radio"
                              />
                            </styled.input>
                            <span>
                              All
                            </span>
                          </label>
                        </styled.label>
                      </Radio>
                      <Radio
                        checked={false}
                        onChange={[Function]}
                      >
                        <styled.label
                          checked={false}
                        >
                          <label
                            checked={false}
                            className="sc-AxheI hvYGtv"
                          >
                            <styled.input
                              checked={false}
                              onChange={[Function]}
                            >
                              <input
                                checked={false}
                                className="sc-AxgMl fICzoZ"
                                onChange={[Function]}
                                type="radio"
                              />
                            </styled.input>
                            <span>
                              1y
                            </span>
                          </label>
                        </styled.label>
                      </Radio>
                      <Radio
                        checked={false}
                        onChange={[Function]}
                      >
                        <styled.label
                          checked={false}
                        >
                          <label
                            checked={false}
                            className="sc-AxheI hvYGtv"
                          >
                            <styled.input
                              checked={false}
                              onChange={[Function]}
                            >
                              <input
                                checked={false}
                                className="sc-AxgMl fICzoZ"
                                onChange={[Function]}
                                type="radio"
                              />
                            </styled.input>
                            <span>
                              3m
                            </span>
                          </label>
                        </styled.label>
                      </Radio>
                      <Radio
                        checked={false}
                        onChange={[Function]}
                      >
                        <styled.label
                          checked={false}
                        >
                          <label
                            checked={false}
                            className="sc-AxheI hvYGtv"
                          >
                            <styled.input
                              checked={false}
                              onChange={[Function]}
                            >
                              <input
                                checked={false}
                                className="sc-AxgMl fICzoZ"
                                onChange={[Function]}
                                type="radio"
                              />
                            </styled.input>
                            <span>
                              1m
                            </span>
                          </label>
                        </styled.label>
                      </Radio>
                    </span>
                  </div>
                </styled.div>
                <ResponsiveContainer
                  aspect={1.3636363636363635}
                  debounce={0}
                  height="100%"
                  width="100%"
                >
                  <div
                    className="recharts-responsive-container"
                    id="undefined"
                    style={
                      Object {
                        "height": "100%",
                        "maxHeight": undefined,
                        "minHeight": undefined,
                        "minWidth": undefined,
                        "width": "100%",
                      }
                    }
                  >
                    <LineChart
                      barCategoryGap="10%"
                      barGap={4}
                      data={
                        Array [
                          Object {
                            "date": "2020-01-01",
                            "index": 100,
                          },
                          Object {
                            "date": "2020-01-02",
                            "index": 101,
                          },
                        ]
                      }
                      height={0}
                      layout="horizontal"
                      margin={
                        Object {
                          "bottom": 5,
                          "left": 5,
                          "right": 5,
                          "top": 5,
                        }
                      }
                      reverseStackOrder={false}
                      stackOffset="none"
                      width={0}
                    />
                    <ResizeDetector
                      handleHeight={true}
                      handleWidth={true}
                      nodeType="div"
                      onResize={[Function]}
                      querySelector={null}
                      refreshRate={1000}
                      skipOnMount={false}
                      targetDomEl={null}
                    >
                      <ChildWrapper>
                        <div />
                      </ChildWrapper>
                    </ResizeDetector>
                  </div>
                </ResponsiveContainer>
              </div>
            </styled.div>
          </div>
        </styled.div>
      </IndexChart>
      <CurrentHoldings
        holdings={
          Object {
            "MKR": 0.5,
            "ZRX": 0.5,
            "date": "2020-01-01",
          }
        }
        tokens={
          Array [
            Object {
              "address": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
              "name": "Maker",
              "symbol": "MKR",
            },
            Object {
              "address": "0xe41d2489571d322189246dafa5ebde1f4699f498",
              "name": "0x Protocol Token",
              "symbol": "ZRX",
            },
          ]
        }
      >
        <styled.div>
          <div
            className="sc-Axmtr leoVKH"
          >
            <styled.div>
              <div
                className="sc-AxjAm qfvsW"
              >
                <styled.h2>
                  <h2
                    className="sc-AxiKw dxaXnq"
                  >
                    Current Holdings
                  </h2>
                </styled.h2>
                <styled.div>
                  <div
                    className="sc-AxmLO MKJBh"
                  >
                    <styled.ol>
                      <ol
                        className="sc-fzozJi hwxddx"
                      >
                        <li
                          key="0"
                        >
                          <img
                            alt="MKR"
                            height="20px"
                            src="https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2/logo.png"
                          />
                           
                          <span>
                            <a
                              href="https://uniswap.info/token/0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
                              target="blank"
                            >
                              MKR
                            </a>
                            : 
                            50
                            %
                          </span>
                        </li>
                        <li
                          key="1"
                        >
                          <img
                            alt="ZRX"
                            height="20px"
                            src="https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xE41d2489571d322189246DaFA5ebDe1F4699F498/logo.png"
                          />
                           
                          <span>
                            <a
                              href="https://uniswap.info/token/0xe41d2489571d322189246dafa5ebde1f4699f498"
                              target="blank"
                            >
                              ZRX
                            </a>
                            : 
                            50
                            %
                          </span>
                        </li>
                      </ol>
                    </styled.ol>
                  </div>
                </styled.div>
              </div>
            </styled.div>
          </div>
        </styled.div>
      </CurrentHoldings>
      <HistoricalHoldings
        holdingsByDate={
          Array [
            Object {
              "MKR": 0.5,
              "ZRX": 0.5,
              "date": "2020-01-01",
            },
            Object {
              "MKR": 0.5,
              "ZRX": 0.5,
              "date": "2020-01-01",
            },
          ]
        }
      >
        <styled.div>
          <div
            className="sc-fzoLsD fkJgyo"
          >
            <styled.div>
              <div
                className="sc-AxjAm qfvsW"
              >
                <styled.h2>
                  <h2
                    className="sc-AxiKw dxaXnq"
                  >
                    Historical Holdings
                  </h2>
                </styled.h2>
                <ResponsiveContainer
                  aspect={1.3636363636363635}
                  debounce={0}
                  height="100%"
                  width="100%"
                >
                  <div
                    className="recharts-responsive-container"
                    id="undefined"
                    style={
                      Object {
                        "height": "100%",
                        "maxHeight": undefined,
                        "minHeight": undefined,
                        "minWidth": undefined,
                        "width": "100%",
                      }
                    }
                  >
                    <AreaChart
                      barCategoryGap="10%"
                      barGap={4}
                      data={
                        Array [
                          Object {
                            "MKR": 0.5,
                            "ZRX": 0.5,
                            "date": "2020-01-01",
                          },
                          Object {
                            "MKR": 0.5,
                            "ZRX": 0.5,
                            "date": "2020-01-01",
                          },
                        ]
                      }
                      height={0}
                      layout="horizontal"
                      margin={
                        Object {
                          "bottom": 5,
                          "left": 5,
                          "right": 5,
                          "top": 5,
                        }
                      }
                      reverseStackOrder={false}
                      stackOffset="none"
                      width={0}
                    />
                    <ResizeDetector
                      handleHeight={true}
                      handleWidth={true}
                      nodeType="div"
                      onResize={[Function]}
                      querySelector={null}
                      refreshRate={1000}
                      skipOnMount={false}
                      targetDomEl={null}
                    >
                      <ChildWrapper>
                        <div />
                      </ChildWrapper>
                    </ResizeDetector>
                  </div>
                </ResponsiveContainer>
              </div>
            </styled.div>
          </div>
        </styled.div>
      </HistoricalHoldings>
    </div>
  </styled.div>
</IndexOverview>
`;
